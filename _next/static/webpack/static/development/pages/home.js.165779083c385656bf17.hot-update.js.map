{"version":3,"file":"static/webpack/static/development/pages/home.js.165779083c385656bf17.hot-update.js","sources":["webpack:///./src/components/HeaderBar.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Link from 'next/link'\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport iconimg from \"../../static/resource/logonav.png\";\n\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst styles = theme => ({\n  tabRoot: {\n    minWidth: 100,\n  },\n  indicator: {\n    backgroundColor: '#3fc2ff',\n  },\n  appBar: {\n    backgroundColor: '#000',\n    textColor: '#fff'\n  },\n  menuButtonGroup: {\n    indicatorColor: '#cc00ff',\n  \tmarginLeft: 'auto',\n  \tmarginRight: 'auto'\n  },\n  menuText: {\n    color: \"#fff\"\n  }\n})\n\nclass HeaderBar extends Component {\n    constructor() {\n        super()\n        this.state = {\n        \topen: false,\n    \t\tanchorEl: null,\n            value: 0\n        }\n    }\n\n    handleChange(event, value) {\n\t    this.setState({ value });\n\t}\n\n\thandleToggle(event) {\n\t    this.setState({ open: !this.state.open });\n    \tthis.setState({ anchorEl: event.currentTarget });\n\t};\n\n\thandleClose(index) {\n\t\t// if (this.anchorEl.contains(event.target)) {\n\t\t//   return;\n\t\t// }\n\t\tconsole.log(index)\n\t\tthis.setState({ open: false });\n    \tthis.setState({ anchorEl: null });\n\t};\n\n  render() {\n    const {classes} = this.props;\n    const { anchorEl } = this.state;\n    return (\n      <div>\n\n\t      <AppBar position=\"static\" color=\"default\" className={classes.appBar}>\n\t        <Toolbar>\n\t          <img src={iconimg} alt=\"iconimg\" />\n\n\t\t        <Tabs className={classes.menuButtonGroup} classes={{indicator: classes.indicator}}\n\t\t          value={this.state.value}\n\t\t          onChange={this.handleChange.bind(this)}\n\t\t        >\n\t\t          <Link href=\"/home\"><Tab className={classes.menuText} classes={{ root: classes.tabRoot }} label=\"首页\" disableRipple={true}/></Link>\n                  <Tab className={classes.menuText} classes={{ root: classes.tabRoot }} disableRipple={true}><Link href=\"/videolist\">视频教学</Link></Tab>\n                  <Tab className={classes.menuText} classes={{ root: classes.tabRoot }} label=\"文档\" disableRipple={true}><Link href=\"/document\" /></Tab>\n                  <Link href=\"/blockchain\"><Tab className={classes.menuText} classes={{ root: classes.tabRoot }} label=\"区块链\" disableRipple={true}/></Link>\n                  <Link href=\"/about\"><Tab className={classes.menuText} classes={{ root: classes.tabRoot }} label=\"关于我们\" disableRipple={true}/></Link>\n\t\t        </Tabs>\n\n\t\t    <ClickAwayListener onClickAway={this.handleClose.bind(this,0)}>\n\t          <div>\n\t\t        <Button\n\t\t            buttonRef={node => {\n\t\t              this.anchorEl = node;\n\t\t            }}\n\t\t            aria-owns={this.state.open ? 'menu-list-grow' : null}\n\t\t            aria-haspopup=\"true\"\n\t\t            onClick={this.handleToggle.bind(this)}\n\t\t            className={classes.menuText}\n\t\t        >\n\t\t            语言选择\n\t\t        </Button>\n            \t<Popper open={this.state.open} anchorEl={this.anchorEl} transition disablePortal>\n\t\t            {({ TransitionProps, placement }) => (\n\t\t              <Grow\n\t\t                {...TransitionProps}\n\t\t                style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n\t\t              >\n\t\t                <Paper>\n\t\t                    <MenuList>\n\t\t                      <MenuItem onClick={this.handleClose.bind(this,1)}>中文</MenuItem>\n\t\t                      <MenuItem onClick={this.handleClose.bind(this,2)}>English</MenuItem>\n\t\t                    </MenuList>\n\t\t                </Paper>\n\t\t              </Grow>\n\t\t            )}\n\t            </Popper>\n\t\t      </div>\n\t\t    </ClickAwayListener>\n\n        \t</Toolbar>\n      \t</AppBar>\n\n      </div>\n    );\n  }\n\n}\n\n\t          // <div className={classes.menuButtonGroup}>\n\t\t          // <Button className={classes.menuText} component={Link} to=\"/home\">Features</Button>\n\t\t          // <Button className={classes.menuText} component={Link} to=\"/videolist\">Enterprise</Button>\n\t\t          // <Button className={classes.menuText} component={Link} to=\"/document\">Support</Button>\n\t\t          // <Button className={classes.menuText} component={Link} to=\"/cb\">Support</Button>\n\t\t          // <Button className={classes.menuText} component={Link} to=\"/about\">Support</Button>\n\t          // </div>\n\nHeaderBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(HeaderBar);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAhBA;AAAA;AACA;AAoBA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAsBA;;;;AArFA;AA0FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;;;;A","sourceRoot":""}